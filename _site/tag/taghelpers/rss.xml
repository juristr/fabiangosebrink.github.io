<?xml version="1.0" encoding="UTF-8" ?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
   
      <title>http://fabian-gosebrink.com</title>
   
   <link>http://offering.solutions</link>
   <description>Articles about Angular & ASP.NET</description>
   <language>en-us</language>
   <managingEditor> Fabian Gosebrink</managingEditor>
   <atom:link href="rss" rel="self" type="application/rss+xml" />
   
	<item>
	  <title>How to use tag helpers in ASP.NET MVC</title>
	  <link>//blog/articles/2015/11/16/how-to-use-tag-helpers-in-asp-net-mvc/</link>
	  <author>Fabian Gosebrink</author>
	  <pubDate>2015-11-16T20:18:00+01:00</pubDate>
	  <guid>//blog/articles/2015/11/16/how-to-use-tag-helpers-in-asp-net-mvc/</guid>
	  <description><![CDATA[
	     <p>Hey,</p>

<p>in this post I want to show you how to use tag helpers in ASP.NET.</p>

<p>First of all: What are the tag helpers good for?</p>

<p>If you are coding your links in your MVC-Views with normal strings its really hard to refactor or correct them in case you rename your routing, controller or your action. So you need a kind of generic approach to do this.</p>

<p>Razor in previous versions had this</p>

<figure class="highlight"><pre><code class="language-cs" data-lang="cs"><span class="n">Url</span><span class="p">.</span><span class="nf">Action</span><span class="p">(</span><span class="s">"MyAction"</span><span class="p">,</span> <span class="s">"MyController"</span><span class="p">,</span> <span class="k">new</span> <span class="p">{</span> <span class="n">id</span> <span class="p">=</span> <span class="s">"123"</span> <span class="p">})</span></code></pre></figure>

<p>which returned an url like <code class="highlighter-rouge">MyController/MyAction/123</code></p>

<p>ASP.NET is now introducing a new more readable way to achieve the same result called TagHelpers.</p>

<blockquote>
  <p>If you are using the normal Template from Visual Studio ASP-NET TagHelpers are already included! However, I will mention the necessary steps anyway.</p>
</blockquote>

<p>Getting started:</p>

<p>First make sure you included a reference to the tag helpers in your project.json</p>

<p><img src="/assets/articles/wp-content/uploads/2015/11/TagHelpers_1.png" alt="TagHelpers_1" /></p>

<p>And Because tag helpers do not throw an exception if you use them and they do not work you should also include a _ViewImports.cshtml which is responsible to load all extra functionality to your views. You can simply add it via the context menu Add –&gt; New Item.</p>

<p><img src="/assets/articles/wp-content/uploads/2015/11/TagHelpers_2.png" alt="TagHelpers_2" />
<img src="/assets/articles/wp-content/uploads/2015/11/TagHelpers_3.png" alt="TagHelpers_3" /></p>

<p>Now all the cshtml files are able to handle ASP.NET-TagHelpers which get easily in your html like this:</p>

<p><code class="highlighter-rouge">&lt;li&gt;&lt;a asp-controller="Home" asp-action="Contact"&gt;Contact&lt;/a&gt;&lt;/li&gt;</code></p>

<p>which is rendered to</p>

<p><code class="highlighter-rouge">&lt;li&gt;&lt;a href="/Home/Contact"&gt;Contact&lt;/a&gt;&lt;/li&gt;</code></p>

<p>That is great because you do not have to use a non-html-syntax anymore and it it easier to understand and to read.</p>

<p>You can also write forms in this Html-Tag-Helper-Syntax which is really nice to understand</p>

<div class="highlighter-rouge"><pre class="highlight"><code>&lt;form asp-controller="Home" asp-action="SendData" method="post" class="form-horizontal" role="form"&gt;
    &lt;div asp-validation-summary="ValidationSummary.All" class="text-danger"&gt;&lt;/div&gt;
    &lt;div class="form-group"&gt;
        &lt;label asp-for="Name" class="col-md-2 control-label"&gt;&lt;/label&gt;
        &lt;div class="col-md-10"&gt;
            &lt;input asp-for="Name" class="form-control" /&gt;
            &lt;span asp-validation-for="Name" class="text-danger"&gt;&lt;/span&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="form-group"&gt;
        &lt;label asp-for="Age" class="col-md-2 control-label"&gt;&lt;/label&gt;
        &lt;div class="col-md-10"&gt;
            &lt;input asp-for="Age" class="form-control" /&gt;
            &lt;span asp-validation-for="Age" class="text-danger"&gt;&lt;/span&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="form-group"&gt;
        &lt;div class="col-md-offset-2 col-md-10"&gt;
            &lt;button type="submit" class="btn btn-default"&gt;Send person&lt;/button&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/form&gt;
</code></pre>
</div>

<p>instead of using the “ugly” @-like Sytax before.</p>

<p>Hope to make you curious about tag helpers. Go and use them in your next ASP.NET-Project :)</p>

<p>Regards</p>

<p>Fabian</p>

	  ]]></description>
	</item>


</channel>
</rss>
