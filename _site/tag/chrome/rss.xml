<?xml version="1.0" encoding="UTF-8" ?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
   
      <title>http://fabian-gosebrink.com</title>
   
   <link>http://offering.solutions</link>
   <description>Articles about Angular & ASP.NET</description>
   <language>en-us</language>
   <managingEditor> Fabian Gosebrink</managingEditor>
   <atom:link href="rss" rel="self" type="application/rss+xml" />
   
	<item>
	  <title>How to debug an Angular application with Chrome and VS Code</title>
	  <link>//blog/articles/2016/10/16/how-to-debug-an-angular-application-with-chrome-and-vs-code/</link>
	  <author>Fabian Gosebrink</author>
	  <pubDate>2016-10-16T17:50:00+02:00</pubDate>
	  <guid>//blog/articles/2016/10/16/how-to-debug-an-angular-application-with-chrome-and-vs-code/</guid>
	  <description><![CDATA[
	     <p>In this blogpost I want to show you how to debug an Angular application with Chrome and VS Code.</p>

<p>First of all you need to install the extension in VS Code.</p>

<p>You can find it here</p>

<p><a href="https://github.com/Microsoft/vscode-chrome-debug">https://github.com/Microsoft/vscode-chrome-debug</a></p>

<p>or search in the extensions tab for the plugin directly:</p>

<p><img src="/assets/articles/wp-content/uploads/2016/10/HowtodebuganAngular2applicationwithChromeandVSCode_01.jpg" alt="How to debug an Angular application with Chrome and VS Code" /></p>

<p>After installing you probably have to enable the plugin and restart VS Code but in the end you will see your folder structure like normal. Then head over to the debug tab and press the button for creating you an new configuration and select the “Chrome” environment.</p>

<p><img src="/assets/articles/wp-content/uploads/2016/10/HowtodebuganAngular2applicationwithChromeandVSCode_02-1024x276.jpg" alt="How to debug an Angular application with Chrome and VS Code" /></p>

<p>After doing this the extension created a new folder (if you do not have it already) called “.vscode” and a “launch.json” in it initially looking like this:</p>

<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="p">{</span>
    <span class="s2">"version"</span><span class="err">:</span> <span class="s2">"0.2.0"</span><span class="p">,</span>
    <span class="s2">"configurations"</span><span class="err">:</span> <span class="p">[</span>
        <span class="p">{</span>
            <span class="s2">"name"</span><span class="p">:</span> <span class="s2">"Launch Chrome against localhost, with sourcemaps"</span><span class="p">,</span>
            <span class="s2">"type"</span><span class="p">:</span> <span class="s2">"chrome"</span><span class="p">,</span>
            <span class="s2">"request"</span><span class="p">:</span> <span class="s2">"launch"</span><span class="p">,</span>
            <span class="s2">"url"</span><span class="p">:</span> <span class="s2">"http://localhost:8080"</span><span class="p">,</span>
            <span class="s2">"sourceMaps"</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
            <span class="s2">"webRoot"</span><span class="p">:</span> <span class="s2">"${workspaceRoot}"</span>
        <span class="p">},</span>
        <span class="p">{</span>
            <span class="s2">"name"</span><span class="p">:</span> <span class="s2">"Attach to Chrome, with sourcemaps"</span><span class="p">,</span>
            <span class="s2">"type"</span><span class="p">:</span> <span class="s2">"chrome"</span><span class="p">,</span>
            <span class="s2">"request"</span><span class="p">:</span> <span class="s2">"attach"</span><span class="p">,</span>
            <span class="s2">"port"</span><span class="p">:</span> <span class="mi">9222</span><span class="p">,</span>
            <span class="s2">"sourceMaps"</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
            <span class="s2">"webRoot"</span><span class="p">:</span> <span class="s2">"${workspaceRoot}"</span>
        <span class="p">}</span>
    <span class="p">]</span>
<span class="p">}</span></code></pre></figure>

<p>Our folder strucutre tells us that the files are served from the root.</p>

<p>So, the “webRoot”: “${workspaceRoot}”” setting is good to go for us. We will open a new Chrome instance but it needs an existing running server. So, if you use something like lite-server, you can easily type “lite-server” at the root of your web application or place it in your NPM command chain in the “NPM Start” command. This is what I did.
But before we go we need to adjust the urls where the server is running on and the url where the Chrome instance is starting.</p>

<p>So replace the port in the config file with the port from your lite-server. In my cae thats “3000”. This is how your config look like then:</p>

<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="p">{</span>
    <span class="s2">"version"</span><span class="err">:</span> <span class="s2">"0.2.0"</span><span class="p">,</span>
    <span class="s2">"configurations"</span><span class="err">:</span> <span class="p">[</span>
        <span class="p">{</span>
            <span class="s2">"name"</span><span class="p">:</span> <span class="s2">"Launch Chrome against localhost, with sourcemaps"</span><span class="p">,</span>
            <span class="s2">"type"</span><span class="p">:</span> <span class="s2">"chrome"</span><span class="p">,</span>
            <span class="s2">"request"</span><span class="p">:</span> <span class="s2">"launch"</span><span class="p">,</span>
            <span class="s2">"url"</span><span class="p">:</span> <span class="s2">"http://localhost:3000"</span><span class="p">,</span>
            <span class="s2">"sourceMaps"</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
            <span class="s2">"webRoot"</span><span class="p">:</span> <span class="s2">"${workspaceRoot}"</span>
        <span class="p">},</span>
        <span class="p">{</span>
            <span class="s2">"name"</span><span class="p">:</span> <span class="s2">"Attach to Chrome, with sourcemaps"</span><span class="p">,</span>
            <span class="s2">"type"</span><span class="p">:</span> <span class="s2">"chrome"</span><span class="p">,</span>
            <span class="s2">"request"</span><span class="p">:</span> <span class="s2">"attach"</span><span class="p">,</span>
            <span class="s2">"port"</span><span class="p">:</span> <span class="mi">9222</span><span class="p">,</span>
            <span class="s2">"sourceMaps"</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
            <span class="s2">"webRoot"</span><span class="p">:</span> <span class="s2">"${workspaceRoot}"</span>
        <span class="p">}</span>
    <span class="p">]</span>
<span class="p">}</span></code></pre></figure>

<p>Then start the lite server and just hit “play”</p>

<p><img src="/assets/articles/wp-content/uploads/2016/10/HowtodebuganAngular2applicationwithChromeandVSCode_04.jpg" alt="How to debug an Angular application with Chrome and VS Code" /></p>

<p><img src="/assets/articles/wp-content/uploads/2016/10/HowtodebuganAngular2applicationwithChromeandVSCode-1024x608.gif" alt="How to debug an Angular application with Chrome and VS Code" /></p>

<p>Chrome starts and you can debug your page in VS Code. Of course you can also confugre Chrome to attach directly. See here for examples:</p>

<p><a href="https://github.com/Microsoft/vscode-chrome-debug/wiki/Examples">https://github.com/Microsoft/vscode-chrome-debug/wiki/Examples</a></p>

<p>Hope this helps anybody</p>

<p>BR</p>

<p>Fabian</p>

	  ]]></description>
	</item>


</channel>
</rss>
